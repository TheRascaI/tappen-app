{"version":3,"sources":["assets/svg/edit.svg","assets/svg/delete.svg","cards/components/CardItem.js","cards/components/CardList.js","cards/pages/UserCards.js"],"names":["CardItem","props","auth","useContext","AuthContext","useState","showConfirmModal","setShowConfirmModal","useHttpClient","isLoading","error","sendRequest","clearError","cancelDeleteHandler","confirmDeleteHandler","a","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay","Modal","show","onCancel","header","footerClass","footer","Button","inverse","onClick","danger","className","Card","content","creatorName","to","src","edit","alt","width","deleteIcon","reports","flag","CardList","items","length","map","data","timestamp","createdAt","slice","creatorId","creator","name","onDeleteCard","UserCards","loadedUserCards","setUserCards","userId","useParams","useEffect","responseData","cards","fetchCards","deletedCardId","prevCards","filter","card"],"mappings":"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","file":"static/js/7.f018c7bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/edit.6b8f1c2a.svg\";","export default __webpack_public_path__ + \"static/media/delete.0a78461e.svg\";","import React,{useState, useContext} from 'react';\nimport Carousel from \"react-grid-carousel\";\nimport Card from '../../shared/components/UIElements/Card';\nimport flag from '../../assets/svg/flag.svg';\nimport edit from '../../assets/svg/edit.svg';\nimport deleteIcon from '../../assets/svg/delete.svg';\nimport './CardItem.css';\nimport Button from '../../shared/components/FormElements/Button';\n\nimport Modal from '../../shared/components/UIElements/Modal';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nconst CardItem = (props) => {\n  const auth = useContext(AuthContext);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n  \n    const showDeleteWarningHandler = () => {\n        setShowConfirmModal(true);\n      };\n    \n      const cancelDeleteHandler = () => {\n        setShowConfirmModal(false);\n      };\n    \n      const confirmDeleteHandler = async () => {\n        setShowConfirmModal(false);\n        try {\n          sendRequest(process.env.REACT_APP_BACKEND_URL + `/cards/${props.id}`, 'DELETE', null, {Authorization: 'Bearer ' + auth.token});\n          props.onDelete(props.id);\n        } catch (error) {\n          \n        }\n      };\n    \n\n    return(\n        <React.Fragment>\n    <ErrorModal error={error} onClear={clearError} />\n    {isLoading && <LoadingSpinner asOverlay/>}\n\n    <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n\n\n\n<li className=\"card-item\">\n<Card className=\"game-card\">\n          <div className=\"card-item__content\">\n          <p>{props.content}</p>\n          </div>\n          <div className=\"card-item__footer\">\n          <div className=\"card-item__footer_top\">@{props.creatorName}</div>\n              <div className=\"card-item__footer_bottom center\">\n              \n              <Button className=\"button--small\" to={`/cards/${props.id}`}><img src={edit} alt=\"edit\" width=\"14px\" /></Button>\n              <Button danger onClick={showDeleteWarningHandler}><img src={deleteIcon} alt=\"delete\" width=\"14px\" /></Button>\n              <Button inverse > {props.reports} <img src={flag} alt=\"flag\" width=\"10px\" /></Button>\n              \n              </div>\n          </div>        \n               \n            </Card>\n\n</li>\n\n        </React.Fragment>\n\n    )\n}\nexport default CardItem;\n","import React from 'react';\nimport CardItem from './CardItem';\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport './CardList.css';\n\nconst CardList = props =>{  \n\n    \n     \n        const createCards = (data) =>{\n          const timestamp = data.createdAt.slice(0, 10);\n          return(\n            \n                <CardItem \n                    key={data.id}\n                    id={data.id}\n                    content={data.content}\n                    creatorId={data.creator}\n                    reports={data.reports}\n                    creatorName={data.creator.name || timestamp}\n                    onDelete={props.onDeleteCard}\n\n                />\n            )\n        }\n    \n        return (\n          <React.Fragment>\n{props.items.length === 0 && <div className=\"cards-list center\">\n            <Card>\n              <h2>No cards found. Maybe create one?</h2>\n              <Button to=\"/api/cards/new\">Create Card</Button>\n            </Card>\n          </div>}\n\n            <div className=\"card-list-container center\">\n      <ul className=\"cards-list \">\n      {props.items.map(createCards)}\n      </ul>\n        </div>\n\n\n          </React.Fragment>\n\n\n)\n    \n\n    \n    \n\n}\n\nexport default CardList;","import React,{useEffect, useState} from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CardList from '../components/CardList';\n\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst UserCards = () =>{\n    const [loadedUserCards, setUserCards] = useState();\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\n\n    const userId = useParams().userId;\n    useEffect(()=>{\n        const fetchCards = async () =>{\n            try{\n                const responseData = await sendRequest(\n                   `${process.env.REACT_APP_BACKEND_URL}/cards/user/${userId}`\n                    );\n                setUserCards(responseData.cards);\n            \n            }catch(err){\n\n            }\n        }\n        fetchCards();\n    },[sendRequest, userId]);\n\n    const cardDeletedHandler = deletedCardId =>{\n        setUserCards(prevCards=> prevCards.filter(card => card.id !== deletedCardId));\n    };\n    return(\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            {isLoading && <LoadingSpinner asOverlay />}\n            {!isLoading && loadedUserCards && <CardList items={loadedUserCards} onDeleteCard={cardDeletedHandler} />}\n        </React.Fragment>\n    )\n}\nexport default UserCards;"],"sourceRoot":""}